services:
  db:
    profiles:
      - catalog
      - production
    image: mysql:8
    restart: always
    env_file:
      - .env
    volumes:
      - db:/var/lib/mysql
    networks:
      - splice
    expose:
      - '3306'
    ports:
      - '3306:3306'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  catalog:
    profiles:
      - catalog
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
      - /app/node_modules
    command: ["sh", "-c", "yarn migrate && yarn dev"]
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      lti-validator:
        condition: service_started
      chrome:
        condition: service_started
    ports:
      - '3000:3000'
    networks:
      - splice
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

  chrome:
    profiles:
      - catalog
      - production
    image: browserless/chrome:latest
    ports:
      - '3001:3000'
    networks:
      - splice

  prod:
    profiles:
      - production
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - .env
    restart: always
    entrypoint: ["pm2-runtime", "./process.yml"]
    depends_on:
      db:
        condition: service_healthy
      lti-validator:
        condition: service_healthy
    volumes:
      - staticvolume:/home/deploy/app/dist/public
    ports:
      - '3000:3000'
    networks:
      - splice
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    profiles:
      - production
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    command: ['nginx', '-g', 'daemon off;']
    volumes:
      - ./certs:/etc/certs
      - staticvolume:/collected-static
    ports:
      - 80:80
      - 443:443
    depends_on:
      - prod
    networks:
      - splice

  lti-validator:
    build:
      context: ./src/lti-microservice
    ports:
      - "4000:4000"
    networks:
      - splice
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/validate']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  db:
  staticvolume:

networks:
  splice:

