
<style>
    .hover-button{
        visibility: hidden;
        opacity: 0;
        transition: opacity 0.2s ease;
        margin-left: 10px;
    }

    tr:hover .hover-button{
        visibility: visible;
        opacity: 1;
    }
</style>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Exercise Title</th>
            <th scope="col">Exercise Type</th>
            <th scope="col">Description</th>
            <th scope="col">Platform</th>
            <th scope="col">Keywords</th>
        </tr>
    </thead>
    <tbody class="table-group-divider">
        <% items.forEach((SLCItem) => { %> 
            <tr>
                <td scope="row">
                    <a href="/item/<%= SLCItem.id %>/<%= SLCItem.exercise_name %>"><%= SLCItem.exercise_name %></a>

                </td>
                <td><%= SLCItem.exercise_type %></td>
                <td>
                    <span class="short-description" onclick="openModal()" style="cursor: pointer; color: black; text-decoration: none; display: inline-block; padding: 5px; background-color: none; border-radius: 5px; transition: background-color 0.3s ease;">
                        
                    </span>
                </td>
                <td><a href="<%= SLCItem.url %>"><%= SLCItem.platform_name %></a></td>
                <td>
                    <% SLCItem.keywords.forEach((keyword, index) => { %>
                        <form style="display: none" action="/search/" method="post">
                            <input type="submit" value="<%= keyword %>" name="query" id="query<%= keyword %>"></input>
                        </form>
                        <label style="text-decoration: underline; color: #0000EE" for="query<%= keyword %>"><%= keyword %></label>
                        <% if (index < SLCItem.keywords.length - 1) { %>, <% } %> <!-- Add a comma between keywords -->
                    <% }); %>
                </td>
                <td>
                    <button class="hover-button btn btn-sm btn-primary" onclick="dumpItem('<%= SLCItem.id %>')">Dump</button>

                </td>
            </tr>

        <% }) %>
    </tbody>
</table>
<!-- Modal -->
<div id="descriptionModal" class="modal" style="display: none; position: fixed; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5);">
    <div class="modal-content" style="background-color: white; margin: 10% auto; padding: 20px; border-radius: 5px; width: 50%; position: relative;">
        <!-- Close button -->
        <span class="close" onclick="closeModal()" 
              style="cursor: pointer; position: absolute; top: 10px; right: 15px; font-size: 24px;">&times;
        </span>
        <p id="fullDescription" style="margin-top: 30px;">This is a detailed description.</p>
    </div>
</div>

<script>
    function dumpItem(id) {
  fetch(`/catalog/dump/${id}`)
    .then(response => {
      if (!response.ok) throw new Error('Failed to fetch dump');
      
      // Extract filename from Content-Disposition header
      const contentDisposition = response.headers.get('Content-Disposition');
      let filename = `item_${id}.json`; // fallback
      
      if (contentDisposition) {
        const filenameMatch = contentDisposition.match(/filename="([^"]+)"/);
        if (filenameMatch) {
          filename = filenameMatch[1];
        }
      }
      
      return response.blob().then(blob => ({ blob, filename }));
    })
    .then(({ blob, filename }) => {
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = filename; // Use the extracted filename
      document.body.appendChild(a);
      a.click();
      a.remove();
      window.URL.revokeObjectURL(url);
    })
    .catch(err => alert(err.message));
}
</script>
